@Library('global-shared-pipeline-lib')_
env.nodejsimage = "${GCR_URL}/${GOOGLE_PROJECT_CRED_ID}/nodejs:${env.BUILD_NUMBER}"
podTemplate(containers: [
   containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
                ],
				volumes: [
					hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
				],
) {

    node(POD_LABEL) {
        stage('Check node') {
            container('docker') {
                stage('Checkout code') {
						gitCheckout(
							branch: "master",
							url: env.SHARED_LIB_GITHUB_URL,
							credentialsId: "Git-Jenkins-Credentials"
						)
					}
                stage('Build and push docker image') {
						buildAndPushDockerImage(
							remote: env.GCR_URL,
							project: env.GOOGLE_PROJECT_CRED_ID,
							imageName: "nodejs",
							tag: "${BUILD_NUMBER}",
							otherargs: "--no-cache=true --force-rm",
							filePath: "$WORKSPACE/build/node/Dockerfile",
							contextPath: "."
						)
				}
				stage('Deploy-Artifacts') {
					    sh """
					    apk add curl
					    apk add gettext
						curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.7.0/bin/linux/amd64/kubectl
						chmod +x ./kubectl
						mv ./kubectl /usr/local/bin/kubectl
						pwd
						printenv
						cat k8s/nodeJS/deployment.yaml | envsubst | kubectl -n devops apply -f - --validate=false
						"""
                        
            }
            }
        }

    }
  }